apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion buildVersions.compileSdk

    defaultConfig {
        applicationId "com.example.android.architecture.blueprints.usecases"
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode buildVersions.versionCode
        versionName buildVersions.versionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.fragment:fragment-ktx:$deps.fragmentKtx"

    // App dependencies
    implementation "androidx.appcompat:appcompat:$deps.appCompat"
    implementation "androidx.cardview:cardview:$deps.card"
    implementation "androidx.recyclerview:recyclerview:$deps.recyclerView"
    implementation "androidx.annotation:annotation:$deps.androidXAnnotations"
    implementation "androidx.legacy:legacy-support-v4:$deps.androidXLegacySupport"
    implementation "androidx.room:room-runtime:$deps.room"
    kapt "androidx.room:room-compiler:$deps.room"

    implementation "androidx.test.espresso:espresso-idling-resource:$deps.espresso"
    
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$deps.coroutines"
    
    implementation "com.jakewharton.timber:timber:$deps.timber"
    
    implementation "com.google.android.material:material:$deps.material"
    
    // Architecture Components
    implementation "androidx.room:room-runtime:$deps.room"
    kapt "androidx.room:room-compiler:$deps.room"
    implementation "androidx.room:room-ktx:$deps.room"
    implementation "androidx.lifecycle:lifecycle-extensions:$deps.archLifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$deps.archLifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$deps.archLifecycle"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$deps.junit"
    testImplementation "org.mockito:mockito-core:$deps.mockito"
    testImplementation "org.hamcrest:hamcrest-all:$deps.hamcrest"
    testImplementation "androidx.arch.core:core-testing:$deps.archTesting"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$deps.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$deps.coroutines"
    testImplementation "org.robolectric:robolectric:$deps.robolectric"
    testImplementation "androidx.test.espresso:espresso-core:$deps.espresso"
    testImplementation "androidx.test.espresso:espresso-contrib:$deps.espresso"
    testImplementation "androidx.test.espresso:espresso-intents:$deps.espresso"
    testImplementation "com.google.truth:truth:$deps.truth"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$deps.junit"
    androidTestImplementation "org.mockito:mockito-core:$deps.mockito"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$deps.dexMaker"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$deps.coroutines"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$deps.androidXTestCore"
    testImplementation "androidx.test.ext:junit-ktx:$deps.androidXTestExtKotlinRunner"
    testImplementation "androidx.test:rules:$deps.androidXTestRules"
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    implementation "androidx.fragment:fragment-testing:$deps.fragment"
    implementation "androidx.test:core:$deps.androidXTestCore"
    implementation "androidx.fragment:fragment:$deps.fragment"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$deps.androidXTestCore"
    androidTestImplementation "androidx.test.ext:junit-ktx:$deps.androidXTestExtKotlinRunner"
    androidTestImplementation "androidx.test:rules:$deps.androidXTestRules"
    androidTestImplementation "androidx.room:room-testing:$deps.room"
    androidTestImplementation "androidx.arch.core:core-testing:$deps.archTesting"
    androidTestImplementation "androidx.test.espresso:espresso-core:$deps.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$deps.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$deps.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$deps.espresso"
    androidTestImplementation "org.robolectric:annotations:$deps.robolectric"
    implementation "androidx.test.espresso:espresso-idling-resource:$deps.espresso"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$deps.androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$deps.androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$deps.recyclerView"
    androidTestImplementation "androidx.appcompat:appcompat:$deps.appCompat"
    androidTestImplementation "com.google.android.material:material:$deps.material"


}
